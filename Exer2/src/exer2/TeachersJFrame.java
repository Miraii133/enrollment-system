/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package exer2;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jiyo
 */
public class TeachersJFrame extends javax.swing.JFrame {

    /**
     * Creates new form StudentsJFrame
     */
    public TeachersJFrame() {
        initComponents();
        SQL sql = new SQL();
        sql.GetResultSetSQL(this.getName(), teachers_table);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        id_textField = new javax.swing.JTextField();
        name_textField = new javax.swing.JTextField();
        dept_textField = new javax.swing.JTextField();
        addr_textField = new javax.swing.JTextField();
        contact_textField = new javax.swing.JTextField();
        status_textField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        teachers_table = new javax.swing.JTable();
        save_button = new javax.swing.JButton();
        update_button = new javax.swing.JButton();
        delete_button = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        idFilter_textField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        id_comboBox = new javax.swing.JComboBox<>();
        nameFilterEnd_textField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        name_comboBox = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        addr_comboBox = new javax.swing.JComboBox<>();
        addrFilterStart_textField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        contact_comboBox = new javax.swing.JComboBox<>();
        contactFilter_textField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        status_comboBox = new javax.swing.JComboBox<>();
        statusFilter_textField = new javax.swing.JTextField();
        deptFilter_textField = new javax.swing.JTextField();
        idLogic_comboBox = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        dept_comboBox = new javax.swing.JComboBox<>();
        nameFilterStart_textField = new javax.swing.JTextField();
        addrFilterEnd_textField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        students_item = new javax.swing.JMenuItem();
        subjects_item = new javax.swing.JMenuItem();
        teachers_item = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Teachers Menu");
        setName("teachersJFrame"); // NOI18N
        setResizable(false);

        jLabel1.setText("Teacher ID");

        jLabel2.setText("Teacher Name");

        jLabel3.setText("Teacher Dept");

        jLabel4.setText("Teacher Address");

        jLabel5.setText("Teacher Contact");

        jLabel6.setText("Teacher Status");

        teachers_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tid", "Tname", "Tdept", "Taddr", "Tcontact", "Tstatus"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        teachers_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                teachers_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(teachers_table);
        if (teachers_table.getColumnModel().getColumnCount() > 0) {
            teachers_table.getColumnModel().getColumn(0).setResizable(false);
            teachers_table.getColumnModel().getColumn(1).setResizable(false);
            teachers_table.getColumnModel().getColumn(2).setResizable(false);
            teachers_table.getColumnModel().getColumn(3).setResizable(false);
            teachers_table.getColumnModel().getColumn(4).setResizable(false);
            teachers_table.getColumnModel().getColumn(5).setResizable(false);
        }

        save_button.setText("Save");
        save_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_buttonActionPerformed(evt);
            }
        });

        update_button.setText("Update");
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        delete_button.setText("Delete");
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(200, 103));

        jLabel7.setText("Filters");

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 1, 13)); // NOI18N
        jLabel8.setText("Teacher ID");

        idFilter_textField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idFilter_textFieldKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Liberation Sans", 1, 13)); // NOI18N
        jLabel9.setText("Teacher Name");

        id_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AND", "OR", "NOT" }));
        id_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_comboBoxActionPerformed(evt);
            }
        });

        nameFilterEnd_textField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameFilterEnd_textFieldKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Liberation Sans", 1, 13)); // NOI18N
        jLabel10.setText("Teacher Dept");

        name_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AND", "OR", "NOT" }));
        name_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_comboBoxActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Liberation Sans", 1, 13)); // NOI18N
        jLabel11.setText("Teacher Address");

        addr_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AND", "OR", "NOT" }));
        addr_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addr_comboBoxActionPerformed(evt);
            }
        });

        addrFilterStart_textField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addrFilterStart_textFieldKeyReleased(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Liberation Sans", 1, 13)); // NOI18N
        jLabel12.setText("Teacher Contact");

        contact_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AND", "OR", "NOT" }));
        contact_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contact_comboBoxActionPerformed(evt);
            }
        });

        contactFilter_textField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contactFilter_textFieldKeyReleased(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Liberation Sans", 1, 13)); // NOI18N
        jLabel13.setText("Teacher Status");

        status_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AND", "OR", "NOT" }));
        status_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                status_comboBoxActionPerformed(evt);
            }
        });

        statusFilter_textField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                statusFilter_textFieldKeyReleased(evt);
            }
        });

        deptFilter_textField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                deptFilter_textFieldKeyReleased(evt);
            }
        });

        idLogic_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=", ">=", "<=", "<", ">", "<>" }));
        idLogic_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idLogic_comboBoxActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Liberation Sans", 0, 13)); // NOI18N
        jLabel14.setText("Ends");

        jLabel15.setFont(new java.awt.Font("Liberation Sans", 0, 13)); // NOI18N
        jLabel15.setText("Starts");

        dept_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AND", "OR", "NOT" }));
        dept_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dept_comboBoxActionPerformed(evt);
            }
        });

        nameFilterStart_textField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameFilterStart_textFieldKeyReleased(evt);
            }
        });

        addrFilterEnd_textField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addrFilterEnd_textFieldKeyReleased(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Liberation Sans", 0, 13)); // NOI18N
        jLabel16.setText("Starts");

        jLabel17.setFont(new java.awt.Font("Liberation Sans", 0, 13)); // NOI18N
        jLabel17.setText("Ends");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addr_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(idLogic_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(idFilter_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel13)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(statusFilter_textField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(103, 103, 103)
                            .addComponent(status_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(contactFilter_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nameFilterStart_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameFilterEnd_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(name_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dept_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deptFilter_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addrFilterStart_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addrFilterEnd_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(contact_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(12, 12, 12)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLogic_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idFilter_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(id_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(nameFilterEnd_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(nameFilterStart_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(name_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deptFilter_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dept_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addr_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addrFilterStart_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addrFilterEnd_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contact_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contactFilter_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(status_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusFilter_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jMenu1.setText("Menu");

        students_item.setText("Students");
        students_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                students_itemActionPerformed(evt);
            }
        });
        jMenu1.add(students_item);

        subjects_item.setText("Subjects");
        subjects_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjects_itemActionPerformed(evt);
            }
        });
        jMenu1.add(subjects_item);

        teachers_item.setText("Teachers");
        teachers_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teachers_itemActionPerformed(evt);
            }
        });
        jMenu1.add(teachers_item);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(save_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update_button)
                        .addGap(12, 12, 12)
                        .addComponent(delete_button))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(id_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dept_textField)
                            .addComponent(addr_textField, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(contact_textField)
                            .addComponent(status_textField))))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(id_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(name_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(dept_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(addr_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(contact_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(status_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(save_button)
                            .addComponent(update_button)
                            .addComponent(delete_button)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void students_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_students_itemActionPerformed
             this.setVisible(false);
             StudentsJFrame studentsFrame = new StudentsJFrame();
             studentsFrame.setVisible(true);
    }//GEN-LAST:event_students_itemActionPerformed

    private void subjects_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjects_itemActionPerformed
             this.setVisible(false);
             SubjectsJFrame subjectsFrame = new SubjectsJFrame();
             subjectsFrame.setVisible(true);
    }//GEN-LAST:event_subjects_itemActionPerformed

    private void teachers_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teachers_itemActionPerformed
             this.setVisible(false);
             TeachersJFrame teachersFrame = new TeachersJFrame();
             teachersFrame.setVisible(true);
    }//GEN-LAST:event_teachers_itemActionPerformed

    
    
    private void save_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_buttonActionPerformed

        /*DefaultTableModel tableModel = (DefaultTableModel) students_table.getModel();
        tableModel.addRow(new Object[]{"10", "Jiyo", "Davao"});*/
        String textFieldValues[] =  
            {
            id_textField.getText(), name_textField.getText(),
            dept_textField.getText(), addr_textField.getText(), 
            contact_textField.getText(), status_textField.getText()};
       
            Functions functions = new Functions();
            SQL sqlObj = new SQL();
            DB db = new DB();
            db.connectDB();
        // checks if ID is a valid id    
        // checks if ID provided already exists
        // so code can insert it to DB.
        if (functions.IsANumber(functions.getTextFieldValues(textFieldValues), this.getName())){
            if (!functions.IsExistingID(functions.getTextFieldValues(textFieldValues), this.getName())){
                // includes frame name to verify which frame
                // is sending the setInsertSQL
                 sqlObj.setInsertSQL(textFieldValues, this.getName());
                 String sql = sqlObj.getInsertSQL(this.getName());
                 db.executeUpdate(sql);
                 sqlObj.GetResultSetSQL(this.getName(), teachers_table);
                System.out.println("Student ID data inserted.");
                
                // converts return value from GetResultSetSQL to
                // a local variable
                
                // passes it to DisplayTableValues
                //List<String> resultData = sqlObj.GetResultSetSQL(students_table);
                //functions.DisplayTableValues(students_table, resultData);
                return;
            }
            System.out.println("Student ID provided already exists!");
            System.out.println("Please use Update instead.");
            }
            
        
    }//GEN-LAST:event_save_buttonActionPerformed

    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed
        String textFieldValues[] =  
             // retrieve current frame name for Functions
             // if condition. 
            {
            id_textField.getText(), name_textField.getText(),
            dept_textField.getText(), addr_textField.getText(), 
            contact_textField.getText(), status_textField.getText()};
        Functions functions = new Functions();
        DB db = new DB();
        db.connectDB();

        //Deletes row and replaces it with a new and updated one.
        // String update = "DELETE FROM Students WHERE studid='" + id + "'";
        SQL sqlObj = new SQL();
      
       if (functions.IsANumber(functions.getTextFieldValues(textFieldValues), this.getName())){
            if (functions.IsExistingID(functions.getTextFieldValues(textFieldValues), this.getName())){
                sqlObj.setUpdateSQL(textFieldValues, this.getName());
                String sql = sqlObj.getUpdateSQL(this.getName());
                db.executeUpdate(sql);
                sqlObj.GetResultSetSQL(this.getName(), teachers_table);
                System.out.println("Student ID data updated.");
                return;
            }
            return;
         }
            System.out.println("Student ID does not exist!");
            System.out.println("Please use Save instead.");
    }//GEN-LAST:event_update_buttonActionPerformed

    
    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
         String textFieldValues[] =  
            {
            id_textField.getText(), name_textField.getText(),
            dept_textField.getText(), addr_textField.getText(), 
            contact_textField.getText(), status_textField.getText()};
        
        DB db = new DB();
        db.connectDB();
        Functions functions = new Functions();
        if (!functions.IsExistingID(textFieldValues, this.getName())){
            System.out.println("Student ID provided does not exist!");
            System.out.println("Cannot delete data from Student ID.");
            return;
        }
        SQL sqlObj = new SQL();
        sqlObj.setDeleteSQL(textFieldValues, this.getName());
        String sql = sqlObj.getDeleteSQL(this.getName());
        db.executeUpdate(sql);
        sqlObj.GetResultSetSQL(this.getName(), teachers_table);
        System.out.println("Student ID data deleted.");
    }//GEN-LAST:event_delete_buttonActionPerformed

    private void teachers_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_teachers_tableMouseClicked
        String teacherid;
        String teachername;
        String teacherdept;
        String teacheraddr;
        String teachercontact;
        String teacherstatus;
        
        int[] selectedRows = teachers_table.getSelectedRows();
        teacherid = teachers_table.getValueAt(selectedRows[0], 0).toString();
        teachername = teachers_table.getValueAt(selectedRows[0], 1).toString();
        teacherdept = teachers_table.getValueAt(selectedRows[0], 2).toString();
        teacheraddr = teachers_table.getValueAt(selectedRows[0], 3).toString();
        teachercontact = teachers_table.getValueAt(selectedRows[0], 4).toString();
        teacherstatus = teachers_table.getValueAt(selectedRows[0], 5).toString();
        id_textField.setText(teacherid);
        name_textField.setText(teachername);
        dept_textField.setText(teacherdept);
        addr_textField.setText(teacheraddr);
        contact_textField.setText(teachercontact);
        status_textField.setText(teacherstatus);
    }//GEN-LAST:event_teachers_tableMouseClicked
    
    
    FilterSQL filterSQL = new FilterSQL();
    DB db = new DB();
    SQL sqlObj = new SQL();
    private String[] idFilter_values;
    public void GetFilterSQL(){
        
        DefaultTableModel tableModel = (DefaultTableModel) teachers_table.getModel();
        sqlObj.ClearJTable(tableModel);
        
        String filterString = "";
         if(!idFilter_textField.getText().equals("")){
            filterString = " WHERE Tid " + idLogic_comboBox.getSelectedItem() + idFilter_textField.getText();
        }
        if(!nameFilterStart_textField.getText().equals("")){
            if(idFilter_textField.getText().equals("")){    
                filterString = String.format("WHERE Tname like '%s%%'", nameFilterStart_textField.getText());
            }else if(!nameFilterEnd_textField.getText().equals("")){
                filterString += String.format(" %s Tname like '%s%%'", id_comboBox.getSelectedItem(), nameFilterStart_textField.getText());
            }else{
                filterString += String.format(" %s Tname like '%s%%'", id_comboBox.getSelectedItem(),nameFilterStart_textField.getText());
            }
            //filterString = " WHERE studName like '" + snameFilter.getText() + "%' ";
        }
        if(!nameFilterEnd_textField.getText().equals("")){
            if(idFilter_textField.getText().equals("") && nameFilterStart_textField.getText().equals("")){
                filterString = String.format("WHERE Tname like '%%%s'", nameFilterEnd_textField.getText());
            }else if(nameFilterStart_textField.getText().equals("")){
                filterString += String.format(" %s Tname like '%%%s'", id_comboBox.getSelectedItem(), nameFilterEnd_textField.getText());
            }else if(!nameFilterStart_textField.getText().equals("") && idFilter_textField.getText().equals("")){
                filterString += String.format(" AND Tname like '$$$s'", nameFilterEnd_textField.getText());
            }else{
                filterString += String.format(" AND Tname like '$$$s'", nameFilterEnd_textField.getText());
            }
            //filterString = " WHERE studName like '%" + nameFilterEnd_textField.getText() + "' ";
        }
       if(!deptFilter_textField.getText().equals("")){
            if(idFilter_textField.getText().equals("") && nameFilterStart_textField.getText().equals("") && nameFilterEnd_textField.getText().equals("") && addrFilterStart_textField.getText().equals("") && addrFilterEnd_textField.getText().equals("")){
                filterString = String.format("WHERE Tdept like '%s%%'", dept_textField.getText());
            }else{
                filterString += String.format(" %s Tdept like '%s%%'", dept_comboBox.getSelectedItem(), deptFilter_textField.getText());
            }
            //filterString = " WHERE teachDept='" + courseFilter.getText() + "' ";
        }

        if(!addrFilterStart_textField.getText().equals("")){
            if(idFilter_textField.getText().equals("") && nameFilterStart_textField.getText().equals("") && nameFilterEnd_textField.getText().equals("") && deptFilter_textField.getText().equals("") && addrFilterEnd_textField.getText().equals("")){
                filterString = String.format("WHERE Taddr like '%s%%'", addrFilterStart_textField.getText());
            }else{
                filterString += String.format(" %s Taddr like '%s%%'", addr_comboBox.getSelectedItem(), addrFilterStart_textField.getText());
            }
            //filterString = " WHERE studcrs='" + crsFilter_textField.getText() + "' ";
        }
        if(!contactFilter_textField.getText().equals("")){
            if(idFilter_textField.getText().equals("") && nameFilterStart_textField.getText().equals("") && nameFilterEnd_textField.getText().equals("") && deptFilter_textField.getText().equals("") && addrFilterEnd_textField.getText().equals("") && addrFilterStart_textField.getText().equals("")){
                filterString = String.format("WHERE Tcontact like '%s%%'", contactFilter_textField.getText());
            }else{
                filterString += String.format(" %s Tcontact like '%s%%'", contact_comboBox.getSelectedItem(), contactFilter_textField.getText());
            }   
            //filterString = " WHERE studGender='" + genderFilter.getText() + "' ";
        }
        if(!statusFilter_textField.getText().equals("")){
            if(idFilter_textField.getText().equals("") && nameFilterStart_textField.getText().equals("") && nameFilterEnd_textField.getText().equals("") && deptFilter_textField.getText().equals("") && addrFilterEnd_textField.getText().equals("") && addrFilterStart_textField.getText().equals("") && contactFilter_textField.getText().equals("")){
                filterString = String.format("WHERE Tstatus like '%s%%'", statusFilter_textField.getText());
            }else{
                filterString += String.format(" %s Tstatus like '%s%%'", status_comboBox.getSelectedItem(), statusFilter_textField.getText());
            }
            //filterString = " WHERE yrlvl='" + yearFilter_textField.getText() + "' ";
        }
        System.out.println(filterString);
        db.connectDB();
        db.executeQuery("SELECT * FROM Teachers " + filterString);
        filterSQL.GetFiltered_ResultSetSQL(this.getName(), teachers_table, "SELECT * FROM Teachers " + filterString);
        
    }
    
    private void id_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_comboBoxActionPerformed
        GetFilterSQL();
       
    }//GEN-LAST:event_id_comboBoxActionPerformed

    private void idLogic_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idLogic_comboBoxActionPerformed
        GetFilterSQL();
    }//GEN-LAST:event_idLogic_comboBoxActionPerformed

    private void dept_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dept_comboBoxActionPerformed
        GetFilterSQL();
    }//GEN-LAST:event_dept_comboBoxActionPerformed

    private void name_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_comboBoxActionPerformed
        GetFilterSQL();
    }//GEN-LAST:event_name_comboBoxActionPerformed

    private void addr_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addr_comboBoxActionPerformed
        GetFilterSQL();
    }//GEN-LAST:event_addr_comboBoxActionPerformed

    private void contact_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contact_comboBoxActionPerformed
         GetFilterSQL();
    }//GEN-LAST:event_contact_comboBoxActionPerformed

    private void status_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_status_comboBoxActionPerformed
         GetFilterSQL();
    }//GEN-LAST:event_status_comboBoxActionPerformed

    private void idFilter_textFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idFilter_textFieldKeyReleased
         GetFilterSQL();
       
    }//GEN-LAST:event_idFilter_textFieldKeyReleased

    private void nameFilterStart_textFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameFilterStart_textFieldKeyReleased
         GetFilterSQL();
    }//GEN-LAST:event_nameFilterStart_textFieldKeyReleased

    private void nameFilterEnd_textFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameFilterEnd_textFieldKeyReleased
         GetFilterSQL();
    }//GEN-LAST:event_nameFilterEnd_textFieldKeyReleased

    private void deptFilter_textFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deptFilter_textFieldKeyReleased
        GetFilterSQL();
    }//GEN-LAST:event_deptFilter_textFieldKeyReleased

    private void addrFilterStart_textFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addrFilterStart_textFieldKeyReleased
        GetFilterSQL();
    }//GEN-LAST:event_addrFilterStart_textFieldKeyReleased

    private void addrFilterEnd_textFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addrFilterEnd_textFieldKeyReleased
        GetFilterSQL();
    }//GEN-LAST:event_addrFilterEnd_textFieldKeyReleased

    private void contactFilter_textFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactFilter_textFieldKeyReleased
        GetFilterSQL();
    }//GEN-LAST:event_contactFilter_textFieldKeyReleased

    private void statusFilter_textFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_statusFilter_textFieldKeyReleased
        GetFilterSQL();
    }//GEN-LAST:event_statusFilter_textFieldKeyReleased
    public JTable GetJTable(){
        
        return teachers_table;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeachersJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeachersJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeachersJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeachersJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeachersJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addrFilterEnd_textField;
    private javax.swing.JTextField addrFilterStart_textField;
    private javax.swing.JComboBox<String> addr_comboBox;
    private javax.swing.JTextField addr_textField;
    private javax.swing.JTextField contactFilter_textField;
    private javax.swing.JComboBox<String> contact_comboBox;
    private javax.swing.JTextField contact_textField;
    private javax.swing.JButton delete_button;
    private javax.swing.JTextField deptFilter_textField;
    private javax.swing.JComboBox<String> dept_comboBox;
    private javax.swing.JTextField dept_textField;
    private javax.swing.JTextField idFilter_textField;
    private javax.swing.JComboBox<String> idLogic_comboBox;
    private javax.swing.JComboBox<String> id_comboBox;
    private javax.swing.JTextField id_textField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameFilterEnd_textField;
    private javax.swing.JTextField nameFilterStart_textField;
    private javax.swing.JComboBox<String> name_comboBox;
    private javax.swing.JTextField name_textField;
    private javax.swing.JButton save_button;
    private javax.swing.JTextField statusFilter_textField;
    private javax.swing.JComboBox<String> status_comboBox;
    private javax.swing.JTextField status_textField;
    private javax.swing.JMenuItem students_item;
    private javax.swing.JMenuItem subjects_item;
    private javax.swing.JMenuItem teachers_item;
    private javax.swing.JTable teachers_table;
    private javax.swing.JButton update_button;
    // End of variables declaration//GEN-END:variables
}
