/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package exer1;

/**
 *
 * @author jiyo
 */
public class Students extends javax.swing.JFrame {

    /**
     * Creates new form Students
     */
    public Students() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        save_button = new javax.swing.JButton();
        update_button = new javax.swing.JButton();
        delete_button = new javax.swing.JButton();
        id_textField = new javax.swing.JTextField();
        course_textField = new javax.swing.JTextField();
        name_textField = new javax.swing.JTextField();
        address_textField = new javax.swing.JTextField();
        gender_textField = new javax.swing.JTextField();
        yrlevel_textField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        back_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setText("Course");

        jLabel5.setText("Gender");

        jLabel6.setText("Year Level");

        save_button.setText("Save");
        save_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_buttonActionPerformed(evt);
            }
        });

        update_button.setText("Update");
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        delete_button.setText("Delete");
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        jLabel2.setText("Name");

        jLabel3.setText("Address");

        back_button.setText("Back");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(name_textField)
                    .addComponent(id_textField)
                    .addComponent(address_textField)
                    .addComponent(course_textField)
                    .addComponent(yrlevel_textField)
                    .addComponent(gender_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 65, Short.MAX_VALUE)
                .addComponent(save_button)
                .addGap(31, 31, 31)
                .addComponent(update_button)
                .addGap(31, 31, 31)
                .addComponent(delete_button)
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(back_button))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(address_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(course_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gender_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yrlevel_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save_button)
                    .addComponent(update_button)
                    .addComponent(delete_button))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private String[] getTextFieldValues(){
        // retrieves values of all text fields and
        // stores them in an array
        // to make it much easier to pass to other methods.
        String[] values = new String[6];
        values[0] = id_textField.getText();
        values[1] = name_textField.getText();
        values[2] = address_textField.getText();
        values[3] = course_textField.getText();
        values[4] = gender_textField.getText();
        values[5] = yrlevel_textField.getText();
        return values;
    }
    
        private boolean IsExistingID(){
        
        String[] values = getTextFieldValues();
        int id = 0;
        try {
           id = Integer.parseInt(values[0]);
        }catch(NumberFormatException ex){
          System.out.println("Number provided for Student ID is not a valid number!");
          System.out.println(ex);
           return false;
    }
        DB db = new DB();
        db.connectDB();
        
        String query = "SELECT * FROM Students WHERE studid='" + id + "'";
        // if ID is not am existing ID.
        if (!db.executeQuery(query)){
            return false;
        }    
            
        // returns true if the ID is valid.
        return true;
        
    }
        
        
    private void save_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_buttonActionPerformed
        String[] values = getTextFieldValues();
        int id = 0;
        try {
            id = Integer.parseInt(values[0]);
        } catch (NumberFormatException ex){
            System.out.println("Student ID provided is not a valid number!");
            System.out.println(ex);
            return;
        }

        String studName = values[1];
        String studAddress = values[2];
        String studCourse = values[3];
        String studGender = values[4];
        String studYrlevel = values[5];

        DB db = new DB();
        db.connectDB();

        // checks if ID provided already exists
        // so code can insert it to DB.
        if (!IsExistingID()){
            String update = "INSERT INTO Students VALUES("+ id + ",'" + studName + "','" + studAddress + "','" + studCourse + "','" +
            studGender + "','" + studYrlevel + "')";
            db.executeUpdate(update);
            System.out.println("Student ID data inserted.");
            return;
        }
        System.out.println("Student ID provided already exists!");
        System.out.println("Please use Update instead.");

    }//GEN-LAST:event_save_buttonActionPerformed

    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed
        String[] values = getTextFieldValues();
        int studId = 0;

        try {
            studId = Integer.parseInt(values[0]);
        }catch(NumberFormatException ex){
            System.out.println("Student ID provided is not a valid number!");
            System.out.println(ex);
            return;
        }
        if (!IsExistingID()){
            System.out.println("Student ID provided does not exist.");
            System.out.println("Please use Save instead.");
            return;
        }

        String studName = values[1];
        String studAddress = values[2];
        String studCourse = values[3];
        String studGender = values[4];
        String studYrlevel = values[5];

        DB db = new DB();
        db.connectDB();

        //Deletes row and replaces it with a new and updated one.
        // String update = "DELETE FROM Students WHERE studid='" + id + "'";
        String update = ""
                + "UPDATE Students SET " + "studid='" + studId + "', studname='" + studName + "', studaddr='" + studAddress + "',"
                + "studcrs='" + studCourse + "', studgender='" + studGender + "', yrlvl='" + studYrlevel + "'"
                + "WHERE studId=" + studId ;
        db.executeUpdate(update);
        /*update = "INSERT INTO Students VALUES("+ studId + ",'" + studName + "','" + studAddress + "','" + studCourse + "','" +
        studGender + "','" + studYrlevel + "')";*/
        System.out.println("Student ID data updated.");

    }//GEN-LAST:event_update_buttonActionPerformed

    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
        String[] values = getTextFieldValues();
        int id = 0;
        try {
            id = Integer.parseInt(values[0]);
        }catch(NumberFormatException ex){
            System.out.println("Student ID provided is not a valid number!");
            System.out.println(ex);
            return;
        }

        if (!IsExistingID()){
            System.out.println("Student ID provided does not exist!");
            System.out.println("Cannot delete data from Student ID.");
            return;
        }

        String update = "DELETE FROM Students WHERE studid='" + id + "'";
        DB db = new DB();
        db.connectDB();
        db.executeUpdate(update);
        System.out.println("Student ID data deleted.");
    }//GEN-LAST:event_delete_buttonActionPerformed

    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        this.setVisible(false);
        MainMenu mainMenu = new MainMenu();
        mainMenu.setVisible(true);       // TODO add your handling code here:
    }//GEN-LAST:event_back_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Students().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address_textField;
    private javax.swing.JButton back_button;
    private javax.swing.JTextField course_textField;
    private javax.swing.JButton delete_button;
    private javax.swing.JTextField gender_textField;
    private javax.swing.JTextField id_textField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField name_textField;
    private javax.swing.JButton save_button;
    private javax.swing.JButton update_button;
    private javax.swing.JTextField yrlevel_textField;
    // End of variables declaration//GEN-END:variables
}
